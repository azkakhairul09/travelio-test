[{"D:\\GitHub\\Travelio Test\\book-search-frontend\\src\\index.js":"1","D:\\GitHub\\Travelio Test\\book-search-frontend\\src\\reportWebVitals.js":"2","D:\\GitHub\\Travelio Test\\book-search-frontend\\src\\App.js":"3","D:\\GitHub\\Travelio Test\\book-search-frontend\\src\\modules\\component\\bookCard\\index.js":"4","D:\\GitHub\\Travelio Test\\book-search-frontend\\src\\function\\apiGetBooks\\index.js":"5","D:\\GitHub\\Travelio Test\\book-search-frontend\\src\\modules\\layout\\searchLayout\\index.js":"6","D:\\GitHub\\Travelio Test\\book-search-frontend\\src\\modules\\layout\\bookLayout\\index.js":"7","D:\\GitHub\\Travelio Test\\book-search-frontend\\src\\modules\\component\\footerBookCard\\index.js":"8","D:\\GitHub\\Travelio Test\\book-search-frontend\\src\\modules\\component\\previewImageCard\\index.js":"9","D:\\GitHub\\Travelio Test\\book-search-frontend\\src\\utility\\Uri\\index.js":"10","D:\\GitHub\\Travelio Test\\book-search-frontend\\src\\modules\\component\\rating\\index.js":"11","D:\\GitHub\\Travelio Test\\book-search-frontend\\src\\modules\\component\\wishlistBookCard\\index.js":"12","D:\\GitHub\\Travelio Test\\book-search-frontend\\src\\function\\apiGetFavorite\\index.js":"13","D:\\GitHub\\Travelio Test\\book-search-frontend\\src\\function\\apiGetWishlist\\index.js":"14","D:\\GitHub\\Travelio Test\\book-search-frontend\\src\\function\\apiSaveWishlist\\index.js":"15","D:\\GitHub\\Travelio Test\\book-search-frontend\\src\\function\\apiSaveFavorite\\index.js":"16"},{"size":535,"mtime":1652080534169,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":1652080534171,"results":"19","hashOfConfig":"18"},{"size":324,"mtime":1652084339102,"results":"20","hashOfConfig":"18"},{"size":4331,"mtime":1652234177638,"results":"21","hashOfConfig":"18"},{"size":414,"mtime":1652170648584,"results":"22","hashOfConfig":"18"},{"size":2020,"mtime":1652235432160,"results":"23","hashOfConfig":"18"},{"size":1201,"mtime":1652235095759,"results":"24","hashOfConfig":"18"},{"size":3166,"mtime":1652201206935,"results":"25","hashOfConfig":"18"},{"size":635,"mtime":1652235223343,"results":"26","hashOfConfig":"18"},{"size":276,"mtime":1652204606854,"results":"27","hashOfConfig":"18"},{"size":277,"mtime":1652097791559,"results":"28","hashOfConfig":"18"},{"size":3265,"mtime":1652204634827,"results":"29","hashOfConfig":"18"},{"size":435,"mtime":1652200927821,"results":"30","hashOfConfig":"18"},{"size":435,"mtime":1652200671987,"results":"31","hashOfConfig":"18"},{"size":436,"mtime":1652201775664,"results":"32","hashOfConfig":"18"},{"size":436,"mtime":1652202148740,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"19gcnl3",{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"37"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"37"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"D:\\GitHub\\Travelio Test\\book-search-frontend\\src\\index.js",[],[],[],"D:\\GitHub\\Travelio Test\\book-search-frontend\\src\\reportWebVitals.js",[],[],"D:\\GitHub\\Travelio Test\\book-search-frontend\\src\\App.js",[],[],"D:\\GitHub\\Travelio Test\\book-search-frontend\\src\\modules\\component\\bookCard\\index.js",["86"],[],"import * as React from 'react';\r\nimport { Alert, Box, CardMedia, Snackbar } from '@mui/material'\r\nimport { getBooks } from '../../../function/apiGetBooks'\r\nimport SearchLayout from '../../layout/searchLayout';\r\nimport { styled } from '@mui/material/styles';\r\nimport empty from '../../../gif/empty.gif'\r\nimport BookLayout from '../../layout/bookLayout';\r\n\r\nconst CardList = styled('div')(({ theme }) => ({\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    margin: theme.spacing(4),\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n        marginLeft: theme.spacing(2),\r\n        width: 'auto',\r\n    },\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center'\r\n}));\r\n\r\nconst EmptyImage = styled(CardMedia)(({ theme }) => ({\r\n    [theme.breakpoints.down('sm')]: {\r\n        width: '100%',\r\n    },\r\n    width: '100%',\r\n    height: 'auto',\r\n    margin: 'auto'\r\n}));\r\n\r\nconst ImageContainer = styled(Box)(({ theme }) => ({\r\n    [theme.breakpoints.down('sm')]: {\r\n        width: '100%',\r\n    },\r\n    width: '600px',\r\n    height: 'auto',\r\n    margin: 'auto'\r\n}));\r\n\r\nfunction BookCard() {\r\n    const ref = React.useRef(null);\r\n    const [value, setValue] = React.useState('')\r\n    const [listBooks, setListBooks] = React.useState(null)\r\n    const [timer, setTimer] = React.useState(null)\r\n    const [state, setState] = React.useState({\r\n        opens: false,\r\n        message: null,\r\n        severity: null\r\n    });\r\n\r\n    const { opens, message, severity } = state;\r\n\r\n    const handleCloses = () => {\r\n        setState({ ...state, opens: false });\r\n    };\r\n\r\n    function onChange(event) {\r\n        setValue(event.target.value)\r\n    }\r\n\r\n    function findBooksWithKeywords(value) {\r\n        if (value.length > 0) {\r\n            getBooks(value).then(async res => {\r\n                if (res) {\r\n                    await setListBooks(res)\r\n                } else {\r\n                    setState({\r\n                        opens: true,\r\n                        message: \"Kami tidak menemukan buku dengan kata kunci tersebut.\",\r\n                        severity: \"error\"\r\n                    })\r\n                }\r\n            }).catch(e => (\r\n                setListBooks(null)\r\n            ))\r\n        }\r\n    }\r\n\r\n    const inputChanged = (event) => {\r\n        clearTimeout(timer)\r\n\r\n        const newTimer = setTimeout(() => {\r\n            findBooksWithKeywords(event.target.value)\r\n        }, 600)\r\n\r\n        setTimer(newTimer)\r\n    }\r\n\r\n    const isWishlistClicked = () => {\r\n        setState({ ...state, opens: false });\r\n        setTimeout(() => {\r\n            setState({\r\n                opens: true,\r\n                message: \"Buku ini berhasil ditambahkan ke wishlist Anda.\",\r\n                severity: \"success\"\r\n            })\r\n        }, 100);\r\n    }\r\n\r\n    const isFavoriteClicked = () => {\r\n        setState({ ...state, opens: false });\r\n        setTimeout(() => {\r\n            setState({\r\n                opens: true,\r\n                message: \"Buku ini berhasil ditambahkan menjadi buku favorit Anda.\",\r\n                severity: \"success\"\r\n            })\r\n        }, 100);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'center', color: '#FFF' }} open={opens} autoHideDuration={2500} onClose={handleCloses}>\r\n                <Alert onClose={handleCloses} severity={severity} sx={{ width: '350px', fontSize: '12px', fontFamily: 'Avenir' }}>\r\n                    {message}\r\n                </Alert>\r\n            </Snackbar>\r\n            <SearchLayout onChange={onChange} inputChanged={inputChanged} findBooksWithKeywords={findBooksWithKeywords} />\r\n            <CardList>\r\n                {listBooks && listBooks.map((obj, i) =>\r\n                    <BookLayout key={i} obj={obj} isWishlistClicked={isWishlistClicked} isFavoriteClicked={isFavoriteClicked} ref={ref} bookUid={obj.id} />\r\n                )}\r\n            </CardList>\r\n            <ImageContainer>\r\n            {!listBooks &&\r\n                <EmptyImage alt=\"empty page\" component=\"img\" src={empty} sx={{\r\n                    width: '600px',\r\n                    height: 'auto',\r\n                    margin: 'auto'\r\n                }} />\r\n            }\r\n            </ImageContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BookCard","D:\\GitHub\\Travelio Test\\book-search-frontend\\src\\function\\apiGetBooks\\index.js",[],[],"D:\\GitHub\\Travelio Test\\book-search-frontend\\src\\modules\\layout\\searchLayout\\index.js",[],[],"D:\\GitHub\\Travelio Test\\book-search-frontend\\src\\modules\\layout\\bookLayout\\index.js",[],[],"D:\\GitHub\\Travelio Test\\book-search-frontend\\src\\modules\\component\\footerBookCard\\index.js",["87"],[],"\r\nimport { Box } from '@mui/material'\r\nimport { forwardRef, useState } from 'react'\r\nimport Rating from '../rating'\r\nimport WishlistBookCard from '../wishlistBookCard'\r\n\r\nconst FooterBookCard = forwardRef((props, ref) => {\r\n    return (\r\n        <>\r\n            <Box sx={{\r\n                padding: '0 8px',\r\n                whiteSpace: \"nowrap\",\r\n                overflow: \"hidden\",\r\n                textOverflow: \"ellipsis\",\r\n                marginBottom: '4px'\r\n            }}>\r\n                {props.authors.length > 0\r\n                    ?\r\n                    <>\r\n                        {props.authors.map((name, i) =>\r\n                            <span key={i} style={{\r\n                                fontSize: \"12px\",\r\n                                fontWeight: 400,\r\n                                fontStyle: \"normal\",\r\n                                fontStretch: \"normal\",\r\n                                letteSpacing: \"normal\",\r\n                                lineHeight: '12px',\r\n                                color: \"#6d6d6d\",\r\n                                whiteSpace: \"nowrap\",\r\n                                overflow: \"hidden\",\r\n                                textOverflow: \"ellipsis\",\r\n                            }}>{(i ? ', ' : '') + name}</span>\r\n                        )}\r\n                    </>\r\n                    :\r\n                    <p style={{\r\n                        fontSize: \"12px\",\r\n                        fontWeight: 400,\r\n                        fontStyle: \"normal\",\r\n                        fontStretch: \"normal\",\r\n                        letteSpacing: \"normal\",\r\n                        lineHeight: '12px',\r\n                        color: \"#6d6d6d\",\r\n                        whiteSpace: \"nowrap\",\r\n                        overflow: \"hidden\",\r\n                        textOverflow: \"ellipsis\",\r\n                    }}></p>\r\n                }\r\n\r\n            </Box>\r\n            <Box sx={{\r\n                padding: '0 8px',\r\n                whiteSpace: \"nowrap\",\r\n                overflow: \"hidden\",\r\n                textOverflow: \"ellipsis\",\r\n                marginBottom: '4px'\r\n            }}>\r\n                <span style={{\r\n                    fontSize: \"14px\",\r\n                    fontWeight: 400,\r\n                    fontStyle: \"normal\",\r\n                    fontStretch: \"normal\",\r\n                    letteSpacing: \"normal\",\r\n                    lineHeight: '12px',\r\n                    color: \"#151515\",\r\n                    whiteSpace: \"nowrap\",\r\n                    overflow: \"hidden\",\r\n                    textOverflow: \"ellipsis\"\r\n                }}>\r\n                    {props.title}\r\n                </span>\r\n            </Box>\r\n            <Box sx={{\r\n                padding: '0 8px',\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n                alignItems: 'center'\r\n            }}>\r\n                <Rating />\r\n                <WishlistBookCard isWishlistClicked={props.isWishlistClicked} isFavoriteClicked={props.isFavoriteClicked} bookUid={props.bookUid} ref={ref} />\r\n            </Box>\r\n        </>\r\n    )\r\n})\r\n\r\nexport default FooterBookCard","D:\\GitHub\\Travelio Test\\book-search-frontend\\src\\modules\\component\\previewImageCard\\index.js",[],[],"D:\\GitHub\\Travelio Test\\book-search-frontend\\src\\utility\\Uri\\index.js",[],[],"D:\\GitHub\\Travelio Test\\book-search-frontend\\src\\modules\\component\\rating\\index.js",[],[],"D:\\GitHub\\Travelio Test\\book-search-frontend\\src\\modules\\component\\wishlistBookCard\\index.js",["88","89","90","91"],[],"import FavoriteIconDefault from '@mui/icons-material/FavoriteBorderOutlined'\r\nimport FavoriteIcon from '@mui/icons-material/FavoriteOutlined'\r\nimport WishlistIconDefault from '@mui/icons-material/BookmarkBorderOutlined'\r\nimport WishlistIcon from '@mui/icons-material/BookmarkOutlined'\r\nimport { pink, grey } from '@mui/material/colors';\r\nimport { Box } from '@mui/material'\r\nimport React, { forwardRef, useEffect, useImperativeHandle } from 'react'\r\nimport { getWishlist } from '../../../function/apiGetWishlist';\r\nimport { getFavorite } from '../../../function/apiGetFavorite';\r\nimport { addWishlist } from '../../../function/apiSaveWishlist';\r\nimport { addFavorite } from '../../../function/apiSaveFavorite';\r\n\r\nconst WishlistBookCard = forwardRef((props, ref) => {\r\n\r\n    const [isFavorite, setIsFavorite] = React.useState(false)\r\n    const [isWishlist, setIsWishlist] = React.useState(false)\r\n\r\n    const cleanValue = () => {\r\n        setIsFavorite(false);\r\n        setIsWishlist(false)\r\n    };\r\n\r\n    function wishlistCheck(value) {\r\n        getWishlist(value).then(async res => {\r\n            if (res && res.code == 200) {\r\n                setIsWishlist(true)\r\n            } else {\r\n                setIsWishlist(false)\r\n            }\r\n        }).catch(e => (\r\n            setIsWishlist(false)\r\n        ))\r\n    }\r\n\r\n    function favoriteCheck(value) {\r\n        getFavorite(value).then(async res => {\r\n            if (res && res.code == 200) {\r\n                setIsFavorite(true)\r\n            } else {\r\n                setIsFavorite(false)\r\n            }\r\n        }).catch(e => (\r\n            setIsFavorite(false)\r\n        ))\r\n    }\r\n\r\n    useEffect(() => {\r\n        wishlistCheck(props.bookUid)\r\n        favoriteCheck(props.bookUid)\r\n    }, [props.bookUid])\r\n    \r\n\r\n    useImperativeHandle(ref, () => {\r\n        return {\r\n            setIsFavorite: cleanValue\r\n        }\r\n    });\r\n\r\n    function saveWishlist(value) {\r\n        addWishlist(value).then(async res => {\r\n            if (res && res.code == 200) {\r\n                props.isWishlistClicked();\r\n                setIsWishlist(true)\r\n            } else {\r\n                setIsWishlist(false)\r\n            }\r\n        }).catch(e => (\r\n            setIsWishlist(false)\r\n        ))\r\n    }\r\n\r\n    function saveFavorite(value) {\r\n        addFavorite(value).then(async res => {\r\n            if (res && res.code == 200) {\r\n                props.isFavoriteClicked();\r\n                setIsFavorite(true)\r\n            } else {\r\n                setIsFavorite(false)\r\n            }\r\n        }).catch(e => (\r\n            setIsFavorite(false)\r\n        ))\r\n    }\r\n\r\n    return (\r\n        <Box sx={{\r\n            display: 'flex'\r\n        }}>\r\n            <Box>\r\n                {isWishlist ? <WishlistIcon sx={{ color: grey[700], cursor: 'pointer' }} /> : <WishlistIconDefault sx={{ cursor: 'pointer' }} onClick={() => { setIsWishlist(true); saveWishlist(props.bookUid) }} />}\r\n            </Box>\r\n            <Box>\r\n                {isFavorite ? <FavoriteIcon sx={{ color: pink[500], cursor: 'pointer' }} /> : <FavoriteIconDefault sx={{ cursor: 'pointer' }} onClick={() => { setIsFavorite(true); saveFavorite(props.bookUid) }} />}\r\n            </Box>\r\n        </Box>\r\n    )\r\n\r\n})\r\n\r\nexport default WishlistBookCard","D:\\GitHub\\Travelio Test\\book-search-frontend\\src\\function\\apiGetFavorite\\index.js",[],[],"D:\\GitHub\\Travelio Test\\book-search-frontend\\src\\function\\apiGetWishlist\\index.js",[],[],"D:\\GitHub\\Travelio Test\\book-search-frontend\\src\\function\\apiSaveWishlist\\index.js",[],[],"D:\\GitHub\\Travelio Test\\book-search-frontend\\src\\function\\apiSaveFavorite\\index.js",[],[],{"ruleId":"92","severity":1,"message":"93","line":44,"column":12,"nodeType":"94","messageId":"95","endLine":44,"endColumn":17},{"ruleId":"92","severity":1,"message":"96","line":3,"column":22,"nodeType":"94","messageId":"95","endLine":3,"endColumn":30},{"ruleId":"97","severity":1,"message":"98","line":25,"column":33,"nodeType":"99","messageId":"100","endLine":25,"endColumn":35},{"ruleId":"97","severity":1,"message":"98","line":37,"column":33,"nodeType":"99","messageId":"100","endLine":37,"endColumn":35},{"ruleId":"97","severity":1,"message":"98","line":61,"column":33,"nodeType":"99","messageId":"100","endLine":61,"endColumn":35},{"ruleId":"97","severity":1,"message":"98","line":74,"column":33,"nodeType":"99","messageId":"100","endLine":74,"endColumn":35},"no-unused-vars","'value' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]